

/*
    USER-MODE STANDARD LIBRARY FOR SEABASS- BASIC INTERFACE.
    
    Should provide the basic functionality...
    
    Make sure to include a bitXX.hbas file...
    
    such as bit64.hbas or bit32.hbas
*/

#guard SEABASS_STDLIB_GNUC


//change these according to your target...

data codegen string SEABASS_STDLIB_PREFIX "#define mcpy __builtin_memcpy\n#define mem_alloc __builtin_malloc\n#define mem_free __builtin_free\n#define mem_realloc __builtin_realloc\n";


fn predecl openfile(char* fname, char* mode)->TGT_UMAX; //returns a handle...
fn predecl closefile(TGT_UMAX p)->int;


fn predecl get_stdout_handle()->TGT_UMAX;
fn predecl get_stdin_handle()->TGT_UMAX;
fn predecl get_stderr_handle()->TGT_UMAX;

//returns number of bytes read/written
fn predecl write_bytes(TGT_UMAX fhandle, char* buf, TGT_UMAX nbytes)->TGT_UMAX;
fn predecl read_bytes(TGT_UMAX fhandle, char* buf, TGT_UMAX nbytes)->TGT_UMAX;

//get unix time...
fn predecl get_utime()->TGT_UMAX;

//realpath...
fn predecl get_real_path(char* path)->char*;

fn predecl set_errno(int new_errno);
fn predecl get_errno()->int;


//memcpy...
fn predecl noexport mcpy(char* dst, char* src, TGT_UMAX sz);


fn predecl println(char* s);

//this is needed to get proper compiler optimization...
fn predecl noexport mem_alloc(TGT_UMAX amt)->char*;
fn predecl noexport mem_free(char* p);
fn predecl noexport mem_realloc(char* p, TGT_UMAX amt)->char*;
fn predecl sys_exit(int a);
/*
    TODO: Fill out the full feature set of
    the C standard library...
    
    I need stuff for controlling the terminal and
    doing 
*/





