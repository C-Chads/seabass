

/*
    USER-MODE STANDARD LIBRARY FOR SEABASS- BASIC INTERFACE.
    
    Should provide the basic functionality...
    
    Make sure to include a bitXX.hbas file...
    
    such as bit64.hbas or bit32.hbas
*/

#guard SEABASS_STDLIB_GNUC

//change these according to your target...
data codegen string SEABASS_STDLIB_PREFIX "\n\n";

fn predecl openfile(char* fname, char* mode)->TGT_UMAX; //returns a handle...
fn predecl closefile(TGT_UMAX p)->int;


fn predecl get_stdout_handle()->TGT_UMAX;
fn predecl get_stdin_handle()->TGT_UMAX;
fn predecl get_stderr_handle()->TGT_UMAX;

//returns number of bytes read/written
fn predecl write_bytes(TGT_UMAX fhandle, char* buf, TGT_UMAX nbytes)->TGT_UMAX;
fn predecl read_bytes(TGT_UMAX fhandle, char* buf, TGT_UMAX nbytes)->TGT_UMAX;

//get unix time...
fn predecl pure get_utime()->TGT_UMAX;

fn predecl set_errno(int new_errno);
fn predecl get_errno()->int;


//memcpy...
fn predecl pure mcpy(char* dst, char* src, TGT_UMAX sz);
fn predecl pure mmove(char* dst, char* src, TGT_UMAX sz);



fn predecl println(char* s);

//this is needed to get proper compiler optimization...
fn predecl pure mem_alloc(TGT_UMAX amt)->char*;
fn predecl pure mem_free(char* p);
fn predecl pure mem_realloc(char* p, TGT_UMAX amt)->char*;
fn predecl sys_exit(int a);
/*
    TODO: Fill out the full feature set of
    the C standard library...
    
    I need stuff for controlling the terminal and
    doing 
*/
/*
    MULTITHREADING
*/

//allocate a thread object...
fn predecl thread_new()->byte*;
//assign the function that a thread uses.
fn predecl thread_assign_fn(byte* tr, byte* funk);
fn predecl thread_assign_arg(byte* tr, byte* arg);
fn predecl thread_start(byte* tr);

fn predecl thread_step(byte* tr);
fn predecl thread_lock(byte* tr);
fn predecl thread_kill(byte* tr);
fn predecl thread_delete(byte* tr);


//mutex stuff
fn predecl mutex_new()->byte*;
fn predecl mutex_delete(byte* mtx);
fn predecl mutex_lock(byte* mtx);
fn predecl mutex_unlock(byte* mtx);




