
SEABASS REQUIRES A C++ STYLE LANGUAGE.


Something to fully replace C++. I find the need
for the following features:

* Failable Functions/Methods
    If a failable function is called, it will
    automatically be wrapped in a try-catch.
    
    I figure the way failable functions will
    work is that they will set `errno` to some
    value (and return some garbage value).
    
    There will be a compiletime `errno` and
    a runtime `errno`. I figure the convention
    for accessing this variable will be:
    
    cg_get_errno()
    cg_set_errno(int val)
    get_errno()
    set_errno()
    
    You will, of course, never actually _see_ this
    in OOPSY code, it'll just be generated for you.
* Templates
    The need to be able to instantiate templated
    types (with methods and functions) anywhere
    in your code is great.
    
    TBAS is not enough. I need this in a dedicated language.
* Borrow checking
    As much as I deeply resent Rust's syntax, the borrow checking
    system (or something equivalent) is necessary to prevent errors.
    


